/*
 * SuprSend API
 * SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * urls of social media accounts of the brand. If you really want to remove any social link, you must set its value&#x3D;\&quot;\&quot; (instead of null)
 */
@ApiModel(description = "urls of social media accounts of the brand. If you really want to remove any social link, you must set its value=\"\" (instead of null)")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BrandCreateOrUpdateRequestSocialLinks {
  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website = "https://suprsend.com";

  public static final String SERIALIZED_NAME_FACEBOOK = "facebook";
  @SerializedName(SERIALIZED_NAME_FACEBOOK)
  private String facebook;

  public static final String SERIALIZED_NAME_LINKEDIN = "linkedin";
  @SerializedName(SERIALIZED_NAME_LINKEDIN)
  private String linkedin;

  public static final String SERIALIZED_NAME_TWITTER = "twitter";
  @SerializedName(SERIALIZED_NAME_TWITTER)
  private String twitter;

  public static final String SERIALIZED_NAME_INSTAGRAM = "instagram";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM)
  private String instagram;

  public static final String SERIALIZED_NAME_MEDIUM = "medium";
  @SerializedName(SERIALIZED_NAME_MEDIUM)
  private String medium;

  public static final String SERIALIZED_NAME_DISCORD = "discord";
  @SerializedName(SERIALIZED_NAME_DISCORD)
  private String discord;

  public static final String SERIALIZED_NAME_TELEGRAM = "telegram";
  @SerializedName(SERIALIZED_NAME_TELEGRAM)
  private String telegram;

  public static final String SERIALIZED_NAME_YOUTUBE = "youtube";
  @SerializedName(SERIALIZED_NAME_YOUTUBE)
  private String youtube;

  public BrandCreateOrUpdateRequestSocialLinks() {
  }

  public BrandCreateOrUpdateRequestSocialLinks website(String website) {
    
    
    
    
    this.website = website;
    return this;
  }

   /**
   * link of brand website. While updating a social link, if you want to remove the link, you must the value&#x3D;\&quot;\&quot; (instead of null)
   * @return website
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://suprsend.com", value = "link of brand website. While updating a social link, if you want to remove the link, you must the value=\"\" (instead of null)")

  public String getWebsite() {
    return website;
  }


  public void setWebsite(String website) {
    
    
    
    this.website = website;
  }


  public BrandCreateOrUpdateRequestSocialLinks facebook(String facebook) {
    
    
    
    
    this.facebook = facebook;
    return this;
  }

   /**
   * brand facebook page link
   * @return facebook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand facebook page link")

  public String getFacebook() {
    return facebook;
  }


  public void setFacebook(String facebook) {
    
    
    
    this.facebook = facebook;
  }


  public BrandCreateOrUpdateRequestSocialLinks linkedin(String linkedin) {
    
    
    
    
    this.linkedin = linkedin;
    return this;
  }

   /**
   * brand linkedin page link
   * @return linkedin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand linkedin page link")

  public String getLinkedin() {
    return linkedin;
  }


  public void setLinkedin(String linkedin) {
    
    
    
    this.linkedin = linkedin;
  }


  public BrandCreateOrUpdateRequestSocialLinks twitter(String twitter) {
    
    
    
    
    this.twitter = twitter;
    return this;
  }

   /**
   * brand twitter page link
   * @return twitter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand twitter page link")

  public String getTwitter() {
    return twitter;
  }


  public void setTwitter(String twitter) {
    
    
    
    this.twitter = twitter;
  }


  public BrandCreateOrUpdateRequestSocialLinks instagram(String instagram) {
    
    
    
    
    this.instagram = instagram;
    return this;
  }

   /**
   * brand instagram page link
   * @return instagram
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand instagram page link")

  public String getInstagram() {
    return instagram;
  }


  public void setInstagram(String instagram) {
    
    
    
    this.instagram = instagram;
  }


  public BrandCreateOrUpdateRequestSocialLinks medium(String medium) {
    
    
    
    
    this.medium = medium;
    return this;
  }

   /**
   * brand medium page link
   * @return medium
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand medium page link")

  public String getMedium() {
    return medium;
  }


  public void setMedium(String medium) {
    
    
    
    this.medium = medium;
  }


  public BrandCreateOrUpdateRequestSocialLinks discord(String discord) {
    
    
    
    
    this.discord = discord;
    return this;
  }

   /**
   * brand discord page link
   * @return discord
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand discord page link")

  public String getDiscord() {
    return discord;
  }


  public void setDiscord(String discord) {
    
    
    
    this.discord = discord;
  }


  public BrandCreateOrUpdateRequestSocialLinks telegram(String telegram) {
    
    
    
    
    this.telegram = telegram;
    return this;
  }

   /**
   * brand telegram page link
   * @return telegram
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand telegram page link")

  public String getTelegram() {
    return telegram;
  }


  public void setTelegram(String telegram) {
    
    
    
    this.telegram = telegram;
  }


  public BrandCreateOrUpdateRequestSocialLinks youtube(String youtube) {
    
    
    
    
    this.youtube = youtube;
    return this;
  }

   /**
   * brand youtube page link
   * @return youtube
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "brand youtube page link")

  public String getYoutube() {
    return youtube;
  }


  public void setYoutube(String youtube) {
    
    
    
    this.youtube = youtube;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BrandCreateOrUpdateRequestSocialLinks instance itself
   */
  public BrandCreateOrUpdateRequestSocialLinks putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrandCreateOrUpdateRequestSocialLinks brandCreateOrUpdateRequestSocialLinks = (BrandCreateOrUpdateRequestSocialLinks) o;
    return Objects.equals(this.website, brandCreateOrUpdateRequestSocialLinks.website) &&
        Objects.equals(this.facebook, brandCreateOrUpdateRequestSocialLinks.facebook) &&
        Objects.equals(this.linkedin, brandCreateOrUpdateRequestSocialLinks.linkedin) &&
        Objects.equals(this.twitter, brandCreateOrUpdateRequestSocialLinks.twitter) &&
        Objects.equals(this.instagram, brandCreateOrUpdateRequestSocialLinks.instagram) &&
        Objects.equals(this.medium, brandCreateOrUpdateRequestSocialLinks.medium) &&
        Objects.equals(this.discord, brandCreateOrUpdateRequestSocialLinks.discord) &&
        Objects.equals(this.telegram, brandCreateOrUpdateRequestSocialLinks.telegram) &&
        Objects.equals(this.youtube, brandCreateOrUpdateRequestSocialLinks.youtube)&&
        Objects.equals(this.additionalProperties, brandCreateOrUpdateRequestSocialLinks.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(website, facebook, linkedin, twitter, instagram, medium, discord, telegram, youtube, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrandCreateOrUpdateRequestSocialLinks {\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    facebook: ").append(toIndentedString(facebook)).append("\n");
    sb.append("    linkedin: ").append(toIndentedString(linkedin)).append("\n");
    sb.append("    twitter: ").append(toIndentedString(twitter)).append("\n");
    sb.append("    instagram: ").append(toIndentedString(instagram)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    discord: ").append(toIndentedString(discord)).append("\n");
    sb.append("    telegram: ").append(toIndentedString(telegram)).append("\n");
    sb.append("    youtube: ").append(toIndentedString(youtube)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("website");
    openapiFields.add("facebook");
    openapiFields.add("linkedin");
    openapiFields.add("twitter");
    openapiFields.add("instagram");
    openapiFields.add("medium");
    openapiFields.add("discord");
    openapiFields.add("telegram");
    openapiFields.add("youtube");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BrandCreateOrUpdateRequestSocialLinks
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BrandCreateOrUpdateRequestSocialLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BrandCreateOrUpdateRequestSocialLinks is not found in the empty JSON string", BrandCreateOrUpdateRequestSocialLinks.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
      if ((jsonObj.get("facebook") != null && !jsonObj.get("facebook").isJsonNull()) && !jsonObj.get("facebook").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebook` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebook").toString()));
      }
      if ((jsonObj.get("linkedin") != null && !jsonObj.get("linkedin").isJsonNull()) && !jsonObj.get("linkedin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedin").toString()));
      }
      if ((jsonObj.get("twitter") != null && !jsonObj.get("twitter").isJsonNull()) && !jsonObj.get("twitter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitter").toString()));
      }
      if ((jsonObj.get("instagram") != null && !jsonObj.get("instagram").isJsonNull()) && !jsonObj.get("instagram").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagram` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagram").toString()));
      }
      if ((jsonObj.get("medium") != null && !jsonObj.get("medium").isJsonNull()) && !jsonObj.get("medium").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `medium` to be a primitive type in the JSON string but got `%s`", jsonObj.get("medium").toString()));
      }
      if ((jsonObj.get("discord") != null && !jsonObj.get("discord").isJsonNull()) && !jsonObj.get("discord").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discord` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discord").toString()));
      }
      if ((jsonObj.get("telegram") != null && !jsonObj.get("telegram").isJsonNull()) && !jsonObj.get("telegram").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `telegram` to be a primitive type in the JSON string but got `%s`", jsonObj.get("telegram").toString()));
      }
      if ((jsonObj.get("youtube") != null && !jsonObj.get("youtube").isJsonNull()) && !jsonObj.get("youtube").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youtube` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youtube").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BrandCreateOrUpdateRequestSocialLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BrandCreateOrUpdateRequestSocialLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BrandCreateOrUpdateRequestSocialLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BrandCreateOrUpdateRequestSocialLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<BrandCreateOrUpdateRequestSocialLinks>() {
           @Override
           public void write(JsonWriter out, BrandCreateOrUpdateRequestSocialLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BrandCreateOrUpdateRequestSocialLinks read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BrandCreateOrUpdateRequestSocialLinks instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BrandCreateOrUpdateRequestSocialLinks given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BrandCreateOrUpdateRequestSocialLinks
  * @throws IOException if the JSON string is invalid with respect to BrandCreateOrUpdateRequestSocialLinks
  */
  public static BrandCreateOrUpdateRequestSocialLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BrandCreateOrUpdateRequestSocialLinks.class);
  }

 /**
  * Convert an instance of BrandCreateOrUpdateRequestSocialLinks to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

