/*
 * SuprSend API
 * SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent {
  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private String header;

  public static final String SERIALIZED_NAME_SCHEMA = "schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private String schema;

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extra_data";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  private String extraData;

  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent() {
  }

  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }


  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent text(String text) {
    
    
    
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "We will soon deliver {{event.product_name}} to {{event.location.city}} ðŸ˜€", value = "")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    
    
    
    this.text = text;
  }


  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent image(String image) {
    
    
    
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    
    
    
    this.image = image;
  }


  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent header(String header) {
    
    
    
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Order Confirmed {{event.date}}", value = "")

  public String getHeader() {
    return header;
  }


  public void setHeader(String header) {
    
    
    
    this.header = header;
  }


  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent schema(String schema) {
    
    
    
    
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.0", value = "")

  public String getSchema() {
    return schema;
  }


  public void setSchema(String schema) {
    
    
    
    this.schema = schema;
  }


  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent extraData(String extraData) {
    
    
    
    
    this.extraData = extraData;
    return this;
  }

   /**
   * Get extraData
   * @return extraData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{ \"city\": \"{{event.amount}}\" }", value = "")

  public String getExtraData() {
    return extraData;
  }


  public void setExtraData(String extraData) {
    
    
    
    this.extraData = extraData;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent instance itself
   */
  public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent templateGetContentChannelResponseVersionsInnerTemplatesInnerContent = (TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent) o;
    return Objects.equals(this.url, templateGetContentChannelResponseVersionsInnerTemplatesInnerContent.url) &&
        Objects.equals(this.text, templateGetContentChannelResponseVersionsInnerTemplatesInnerContent.text) &&
        Objects.equals(this.image, templateGetContentChannelResponseVersionsInnerTemplatesInnerContent.image) &&
        Objects.equals(this.header, templateGetContentChannelResponseVersionsInnerTemplatesInnerContent.header) &&
        Objects.equals(this.schema, templateGetContentChannelResponseVersionsInnerTemplatesInnerContent.schema) &&
        Objects.equals(this.extraData, templateGetContentChannelResponseVersionsInnerTemplatesInnerContent.extraData)&&
        Objects.equals(this.additionalProperties, templateGetContentChannelResponseVersionsInnerTemplatesInnerContent.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, text, image, header, schema, extraData, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("url");
    openapiFields.add("text");
    openapiFields.add("image");
    openapiFields.add("header");
    openapiFields.add("schema");
    openapiFields.add("extra_data");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent is not found in the empty JSON string", TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if ((jsonObj.get("image") != null && !jsonObj.get("image").isJsonNull()) && !jsonObj.get("image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image").toString()));
      }
      if ((jsonObj.get("header") != null && !jsonObj.get("header").isJsonNull()) && !jsonObj.get("header").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `header` to be a primitive type in the JSON string but got `%s`", jsonObj.get("header").toString()));
      }
      if ((jsonObj.get("schema") != null && !jsonObj.get("schema").isJsonNull()) && !jsonObj.get("schema").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schema` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schema").toString()));
      }
      if ((jsonObj.get("extra_data") != null && !jsonObj.get("extra_data").isJsonNull()) && !jsonObj.get("extra_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extra_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extra_data").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent.class));

       return (TypeAdapter<T>) new TypeAdapter<TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent>() {
           @Override
           public void write(JsonWriter out, TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent
  * @throws IOException if the JSON string is invalid with respect to TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent
  */
  public static TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent.class);
  }

 /**
  * Convert an instance of TemplateGetContentChannelResponseVersionsInnerTemplatesInnerContent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

