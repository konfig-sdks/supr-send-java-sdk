/*
 * SuprSend API
 * SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner;
import com.konfigthis.client.model.WorkflowConfigureTriggerRequestUsersInnerIospushInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * WorkflowConfigureTriggerRequestUsersInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WorkflowConfigureTriggerRequestUsersInner {
  public static final String SERIALIZED_NAME_DISTINCT_ID = "distinct_id";
  @SerializedName(SERIALIZED_NAME_DISTINCT_ID)
  private String distinctId = "_distinct_id_";

  public static final String SERIALIZED_NAME_$_CHANNELS = "$channels";
  @SerializedName(SERIALIZED_NAME_$_CHANNELS)
  private List<String> $channels = null;

  public static final String SERIALIZED_NAME_$_EMAIL = "$email";
  @SerializedName(SERIALIZED_NAME_$_EMAIL)
  private List<String> $email = null;

  public static final String SERIALIZED_NAME_$_SMS = "$sms";
  @SerializedName(SERIALIZED_NAME_$_SMS)
  private List<String> $sms = null;

  public static final String SERIALIZED_NAME_$_WHATSAPP = "$whatsapp";
  @SerializedName(SERIALIZED_NAME_$_WHATSAPP)
  private List<String> $whatsapp = null;

  public static final String SERIALIZED_NAME_$_ANDROIDPUSH = "$androidpush";
  @SerializedName(SERIALIZED_NAME_$_ANDROIDPUSH)
  private List<WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner> $androidpush = null;

  public static final String SERIALIZED_NAME_$_IOSPUSH = "$iospush";
  @SerializedName(SERIALIZED_NAME_$_IOSPUSH)
  private List<WorkflowConfigureTriggerRequestUsersInnerIospushInner> $iospush = null;

  public static final String SERIALIZED_NAME_$_SLACK = "$slack";
  @SerializedName(SERIALIZED_NAME_$_SLACK)
  private String $slack;

  public WorkflowConfigureTriggerRequestUsersInner() {
  }

  public WorkflowConfigureTriggerRequestUsersInner distinctId(String distinctId) {
    
    
    
    
    this.distinctId = distinctId;
    return this;
  }

   /**
   * unique identifier of the user
   * @return distinctId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "_distinct_id_", required = true, value = "unique identifier of the user")

  public String getDistinctId() {
    return distinctId;
  }


  public void setDistinctId(String distinctId) {
    
    
    
    this.distinctId = distinctId;
  }


  public WorkflowConfigureTriggerRequestUsersInner $channels(List<String> $channels) {
    
    
    
    
    this.$channels = $channels;
    return this;
  }

  public WorkflowConfigureTriggerRequestUsersInner add$ChannelsItem(String $channelsItem) {
    if (this.$channels == null) {
      this.$channels = new ArrayList<>();
    }
    this.$channels.add($channelsItem);
    return this;
  }

   /**
   * send notification on selected channels in user profile. Following channel keys can be used: email, sms, whatsapp, androidpush, iospush, slack, webpush
   * @return $channels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "send notification on selected channels in user profile. Following channel keys can be used: email, sms, whatsapp, androidpush, iospush, slack, webpush")

  public List<String> get$Channels() {
    return $channels;
  }


  public void set$Channels(List<String> $channels) {
    
    
    
    this.$channels = $channels;
  }


  public WorkflowConfigureTriggerRequestUsersInner $email(List<String> $email) {
    
    
    
    
    this.$email = $email;
    return this;
  }

  public WorkflowConfigureTriggerRequestUsersInner add$EmailItem(String $emailItem) {
    if (this.$email == null) {
      this.$email = new ArrayList<>();
    }
    this.$email.add($emailItem);
    return this;
  }

   /**
   * To trigger notification on a particular email
   * @return $email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "To trigger notification on a particular email")

  public List<String> get$Email() {
    return $email;
  }


  public void set$Email(List<String> $email) {
    
    
    
    this.$email = $email;
  }


  public WorkflowConfigureTriggerRequestUsersInner $sms(List<String> $sms) {
    
    
    
    
    this.$sms = $sms;
    return this;
  }

  public WorkflowConfigureTriggerRequestUsersInner add$SmsItem(String $smsItem) {
    if (this.$sms == null) {
      this.$sms = new ArrayList<>();
    }
    this.$sms.add($smsItem);
    return this;
  }

   /**
   * Send SMS on a particular number.
   * @return $sms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "Send SMS on a particular number.")

  public List<String> get$Sms() {
    return $sms;
  }


  public void set$Sms(List<String> $sms) {
    
    
    
    this.$sms = $sms;
  }


  public WorkflowConfigureTriggerRequestUsersInner $whatsapp(List<String> $whatsapp) {
    
    
    
    
    this.$whatsapp = $whatsapp;
    return this;
  }

  public WorkflowConfigureTriggerRequestUsersInner add$WhatsappItem(String $whatsappItem) {
    if (this.$whatsapp == null) {
      this.$whatsapp = new ArrayList<>();
    }
    this.$whatsapp.add($whatsappItem);
    return this;
  }

   /**
   * Send Whatsapp on a particular number.
   * @return $whatsapp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "Send Whatsapp on a particular number.")

  public List<String> get$Whatsapp() {
    return $whatsapp;
  }


  public void set$Whatsapp(List<String> $whatsapp) {
    
    
    
    this.$whatsapp = $whatsapp;
  }


  public WorkflowConfigureTriggerRequestUsersInner $androidpush(List<WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner> $androidpush) {
    
    
    
    
    this.$androidpush = $androidpush;
    return this;
  }

  public WorkflowConfigureTriggerRequestUsersInner add$AndroidpushItem(WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner $androidpushItem) {
    if (this.$androidpush == null) {
      this.$androidpush = new ArrayList<>();
    }
    this.$androidpush.add($androidpushItem);
    return this;
  }

   /**
   * Send androidpush on the given push token
   * @return $androidpush
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send androidpush on the given push token")

  public List<WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner> get$Androidpush() {
    return $androidpush;
  }


  public void set$Androidpush(List<WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner> $androidpush) {
    
    
    
    this.$androidpush = $androidpush;
  }


  public WorkflowConfigureTriggerRequestUsersInner $iospush(List<WorkflowConfigureTriggerRequestUsersInnerIospushInner> $iospush) {
    
    
    
    
    this.$iospush = $iospush;
    return this;
  }

  public WorkflowConfigureTriggerRequestUsersInner add$IospushItem(WorkflowConfigureTriggerRequestUsersInnerIospushInner $iospushItem) {
    if (this.$iospush == null) {
      this.$iospush = new ArrayList<>();
    }
    this.$iospush.add($iospushItem);
    return this;
  }

   /**
   * Send iOSpush on the given push token
   * @return $iospush
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send iOSpush on the given push token")

  public List<WorkflowConfigureTriggerRequestUsersInnerIospushInner> get$Iospush() {
    return $iospush;
  }


  public void set$Iospush(List<WorkflowConfigureTriggerRequestUsersInnerIospushInner> $iospush) {
    
    
    
    this.$iospush = $iospush;
  }


  public WorkflowConfigureTriggerRequestUsersInner $slack(String $slack) {
    
    
    
    
    this.$slack = $slack;
    return this;
  }

   /**
   * Send Slack on a particular channel in user&#39;s profile. Use one of the methods to add slack token - 1. slack using email: {\&quot;email\&quot;: \&quot;user@example.com\&quot;, \&quot;access_token\&quot;: \&quot;xoxb-XXXXXXXX\&quot;} ------ 2. slack using member_id: {\&quot;user_id\&quot;: \&quot;U/WXXXXXXXX\&quot;, \&quot;access_token\&quot;: \&quot;xoxb-XXXXXXXX\&quot;} ------- 3. slack channel: {\&quot;channel\&quot;: \&quot;CXXXXXXXX\&quot;, \&quot;access_token\&quot;: \&quot;xoxb-XXXXXXXX\&quot;} -------- 4. slack incoming webhook: {\&quot;incoming_webhook\&quot;: { \&quot;url\&quot;: \&quot;https://hooks.slack.com/services/TXXXXXXXXX/BXXXXXXXX/XXXXXXXXXXXXXXXXXXX\&quot;}}
   * @return $slack
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send Slack on a particular channel in user's profile. Use one of the methods to add slack token - 1. slack using email: {\"email\": \"user@example.com\", \"access_token\": \"xoxb-XXXXXXXX\"} ------ 2. slack using member_id: {\"user_id\": \"U/WXXXXXXXX\", \"access_token\": \"xoxb-XXXXXXXX\"} ------- 3. slack channel: {\"channel\": \"CXXXXXXXX\", \"access_token\": \"xoxb-XXXXXXXX\"} -------- 4. slack incoming webhook: {\"incoming_webhook\": { \"url\": \"https://hooks.slack.com/services/TXXXXXXXXX/BXXXXXXXX/XXXXXXXXXXXXXXXXXXX\"}}")

  public String get$Slack() {
    return $slack;
  }


  public void set$Slack(String $slack) {
    
    
    
    this.$slack = $slack;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WorkflowConfigureTriggerRequestUsersInner instance itself
   */
  public WorkflowConfigureTriggerRequestUsersInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowConfigureTriggerRequestUsersInner workflowConfigureTriggerRequestUsersInner = (WorkflowConfigureTriggerRequestUsersInner) o;
    return Objects.equals(this.distinctId, workflowConfigureTriggerRequestUsersInner.distinctId) &&
        Objects.equals(this.$channels, workflowConfigureTriggerRequestUsersInner.$channels) &&
        Objects.equals(this.$email, workflowConfigureTriggerRequestUsersInner.$email) &&
        Objects.equals(this.$sms, workflowConfigureTriggerRequestUsersInner.$sms) &&
        Objects.equals(this.$whatsapp, workflowConfigureTriggerRequestUsersInner.$whatsapp) &&
        Objects.equals(this.$androidpush, workflowConfigureTriggerRequestUsersInner.$androidpush) &&
        Objects.equals(this.$iospush, workflowConfigureTriggerRequestUsersInner.$iospush) &&
        Objects.equals(this.$slack, workflowConfigureTriggerRequestUsersInner.$slack)&&
        Objects.equals(this.additionalProperties, workflowConfigureTriggerRequestUsersInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distinctId, $channels, $email, $sms, $whatsapp, $androidpush, $iospush, $slack, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowConfigureTriggerRequestUsersInner {\n");
    sb.append("    distinctId: ").append(toIndentedString(distinctId)).append("\n");
    sb.append("    $channels: ").append(toIndentedString($channels)).append("\n");
    sb.append("    $email: ").append(toIndentedString($email)).append("\n");
    sb.append("    $sms: ").append(toIndentedString($sms)).append("\n");
    sb.append("    $whatsapp: ").append(toIndentedString($whatsapp)).append("\n");
    sb.append("    $androidpush: ").append(toIndentedString($androidpush)).append("\n");
    sb.append("    $iospush: ").append(toIndentedString($iospush)).append("\n");
    sb.append("    $slack: ").append(toIndentedString($slack)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("distinct_id");
    openapiFields.add("$channels");
    openapiFields.add("$email");
    openapiFields.add("$sms");
    openapiFields.add("$whatsapp");
    openapiFields.add("$androidpush");
    openapiFields.add("$iospush");
    openapiFields.add("$slack");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("distinct_id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkflowConfigureTriggerRequestUsersInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkflowConfigureTriggerRequestUsersInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkflowConfigureTriggerRequestUsersInner is not found in the empty JSON string", WorkflowConfigureTriggerRequestUsersInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WorkflowConfigureTriggerRequestUsersInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("distinct_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distinct_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distinct_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("$channels") != null && !jsonObj.get("$channels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `$channels` to be an array in the JSON string but got `%s`", jsonObj.get("$channels").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("$email") != null && !jsonObj.get("$email").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `$email` to be an array in the JSON string but got `%s`", jsonObj.get("$email").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("$sms") != null && !jsonObj.get("$sms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `$sms` to be an array in the JSON string but got `%s`", jsonObj.get("$sms").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("$whatsapp") != null && !jsonObj.get("$whatsapp").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `$whatsapp` to be an array in the JSON string but got `%s`", jsonObj.get("$whatsapp").toString()));
      }
      if (jsonObj.get("$androidpush") != null && !jsonObj.get("$androidpush").isJsonNull()) {
        JsonArray jsonArray$androidpush = jsonObj.getAsJsonArray("$androidpush");
        if (jsonArray$androidpush != null) {
          // ensure the json data is an array
          if (!jsonObj.get("$androidpush").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `$androidpush` to be an array in the JSON string but got `%s`", jsonObj.get("$androidpush").toString()));
          }

          // validate the optional field `$androidpush` (array)
          for (int i = 0; i < jsonArray$androidpush.size(); i++) {
            WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner.validateJsonObject(jsonArray$androidpush.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("$iospush") != null && !jsonObj.get("$iospush").isJsonNull()) {
        JsonArray jsonArray$iospush = jsonObj.getAsJsonArray("$iospush");
        if (jsonArray$iospush != null) {
          // ensure the json data is an array
          if (!jsonObj.get("$iospush").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `$iospush` to be an array in the JSON string but got `%s`", jsonObj.get("$iospush").toString()));
          }

          // validate the optional field `$iospush` (array)
          for (int i = 0; i < jsonArray$iospush.size(); i++) {
            WorkflowConfigureTriggerRequestUsersInnerIospushInner.validateJsonObject(jsonArray$iospush.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("$slack") != null && !jsonObj.get("$slack").isJsonNull()) && !jsonObj.get("$slack").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$slack` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$slack").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkflowConfigureTriggerRequestUsersInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkflowConfigureTriggerRequestUsersInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkflowConfigureTriggerRequestUsersInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkflowConfigureTriggerRequestUsersInner.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkflowConfigureTriggerRequestUsersInner>() {
           @Override
           public void write(JsonWriter out, WorkflowConfigureTriggerRequestUsersInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkflowConfigureTriggerRequestUsersInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WorkflowConfigureTriggerRequestUsersInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkflowConfigureTriggerRequestUsersInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkflowConfigureTriggerRequestUsersInner
  * @throws IOException if the JSON string is invalid with respect to WorkflowConfigureTriggerRequestUsersInner
  */
  public static WorkflowConfigureTriggerRequestUsersInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkflowConfigureTriggerRequestUsersInner.class);
  }

 /**
  * Convert an instance of WorkflowConfigureTriggerRequestUsersInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

