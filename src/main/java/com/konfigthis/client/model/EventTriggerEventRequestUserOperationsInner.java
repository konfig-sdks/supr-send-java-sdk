/*
 * SuprSend API
 * SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EventTriggerEventRequestUserOperationsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EventTriggerEventRequestUserOperationsInner {
  public static final String SERIALIZED_NAME_$_APPEND = "$append";
  @SerializedName(SERIALIZED_NAME_$_APPEND)
  private Object $append;

  public static final String SERIALIZED_NAME_$_REMOVE = "$remove";
  @SerializedName(SERIALIZED_NAME_$_REMOVE)
  private Object $remove;

  public static final String SERIALIZED_NAME_$_SET = "$set";
  @SerializedName(SERIALIZED_NAME_$_SET)
  private Object $set;

  public static final String SERIALIZED_NAME_$_UNSET = "$unset";
  @SerializedName(SERIALIZED_NAME_$_UNSET)
  private List<String> $unset = null;

  public EventTriggerEventRequestUserOperationsInner() {
  }

  public EventTriggerEventRequestUserOperationsInner $append(Object $append) {
    
    
    
    
    this.$append = $append;
    return this;
  }

   /**
   * Use this to add communication channels in user profile. Following channel keys: &#x60;$email&#x60;, &#x60;$sms&#x60;, &#x60;$whatsapp&#x60;, &#x60;$androidpush&#x60;, &#x60;$iospush&#x60;, &#x60;$slack&#x60;, &#x60;$webpush&#x60;, &#x60;$ms_teams&#x60;. Add channel as {\&quot;$email\&quot;:\&quot;user@example.com\&quot;}
   * @return $append
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to add communication channels in user profile. Following channel keys: `$email`, `$sms`, `$whatsapp`, `$androidpush`, `$iospush`, `$slack`, `$webpush`, `$ms_teams`. Add channel as {\"$email\":\"user@example.com\"}")

  public Object get$Append() {
    return $append;
  }


  public void set$Append(Object $append) {
    
    
    
    this.$append = $append;
  }


  public EventTriggerEventRequestUserOperationsInner $remove(Object $remove) {
    
    
    
    
    this.$remove = $remove;
    return this;
  }

   /**
   * Use this to remove communication channels from user profile. Following channel keys: &#x60;$email&#x60;, &#x60;$sms&#x60;, &#x60;$whatsapp&#x60;, &#x60;$androidpush&#x60;, &#x60;$iospush&#x60;, &#x60;$slack&#x60;, &#x60;$webpush&#x60;, &#x60;$ms_teams&#x60;. Define channel as {\&quot;$email\&quot;:\&quot;user@example.com\&quot;}
   * @return $remove
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to remove communication channels from user profile. Following channel keys: `$email`, `$sms`, `$whatsapp`, `$androidpush`, `$iospush`, `$slack`, `$webpush`, `$ms_teams`. Define channel as {\"$email\":\"user@example.com\"}")

  public Object get$Remove() {
    return $remove;
  }


  public void set$Remove(Object $remove) {
    
    
    
    this.$remove = $remove;
  }


  public EventTriggerEventRequestUserOperationsInner $set(Object $set) {
    
    
    
    
    this.$set = $set;
    return this;
  }

   /**
   * Use this to set user properties like location, preferred language etc. You can define properties in key-value pair as &#x60;{\&quot;$preferred_language\&quot;:\&quot;hi\&quot;}&#x60;
   * @return $set
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to set user properties like location, preferred language etc. You can define properties in key-value pair as `{\"$preferred_language\":\"hi\"}`")

  public Object get$Set() {
    return $set;
  }


  public void set$Set(Object $set) {
    
    
    
    this.$set = $set;
  }


  public EventTriggerEventRequestUserOperationsInner $unset(List<String> $unset) {
    
    
    
    
    this.$unset = $unset;
    return this;
  }

  public EventTriggerEventRequestUserOperationsInner add$UnsetItem(String $unsetItem) {
    if (this.$unset == null) {
      this.$unset = new ArrayList<>();
    }
    this.$unset.add($unsetItem);
    return this;
  }

   /**
   * Use this to remove properties from user profile. Define the property keys to be removed as \&quot;$preferred_language\&quot;
   * @return $unset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "Use this to remove properties from user profile. Define the property keys to be removed as \"$preferred_language\"")

  public List<String> get$Unset() {
    return $unset;
  }


  public void set$Unset(List<String> $unset) {
    
    
    
    this.$unset = $unset;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EventTriggerEventRequestUserOperationsInner instance itself
   */
  public EventTriggerEventRequestUserOperationsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventTriggerEventRequestUserOperationsInner eventTriggerEventRequestUserOperationsInner = (EventTriggerEventRequestUserOperationsInner) o;
    return Objects.equals(this.$append, eventTriggerEventRequestUserOperationsInner.$append) &&
        Objects.equals(this.$remove, eventTriggerEventRequestUserOperationsInner.$remove) &&
        Objects.equals(this.$set, eventTriggerEventRequestUserOperationsInner.$set) &&
        Objects.equals(this.$unset, eventTriggerEventRequestUserOperationsInner.$unset)&&
        Objects.equals(this.additionalProperties, eventTriggerEventRequestUserOperationsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash($append, $remove, $set, $unset, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventTriggerEventRequestUserOperationsInner {\n");
    sb.append("    $append: ").append(toIndentedString($append)).append("\n");
    sb.append("    $remove: ").append(toIndentedString($remove)).append("\n");
    sb.append("    $set: ").append(toIndentedString($set)).append("\n");
    sb.append("    $unset: ").append(toIndentedString($unset)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("$append");
    openapiFields.add("$remove");
    openapiFields.add("$set");
    openapiFields.add("$unset");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EventTriggerEventRequestUserOperationsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EventTriggerEventRequestUserOperationsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EventTriggerEventRequestUserOperationsInner is not found in the empty JSON string", EventTriggerEventRequestUserOperationsInner.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("$unset") != null && !jsonObj.get("$unset").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `$unset` to be an array in the JSON string but got `%s`", jsonObj.get("$unset").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EventTriggerEventRequestUserOperationsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EventTriggerEventRequestUserOperationsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EventTriggerEventRequestUserOperationsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EventTriggerEventRequestUserOperationsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<EventTriggerEventRequestUserOperationsInner>() {
           @Override
           public void write(JsonWriter out, EventTriggerEventRequestUserOperationsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EventTriggerEventRequestUserOperationsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EventTriggerEventRequestUserOperationsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EventTriggerEventRequestUserOperationsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EventTriggerEventRequestUserOperationsInner
  * @throws IOException if the JSON string is invalid with respect to EventTriggerEventRequestUserOperationsInner
  */
  public static EventTriggerEventRequestUserOperationsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EventTriggerEventRequestUserOperationsInner.class);
  }

 /**
  * Convert an instance of EventTriggerEventRequestUserOperationsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

