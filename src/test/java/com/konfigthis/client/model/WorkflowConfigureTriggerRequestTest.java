/*
 * SuprSend API
 * SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.WorkflowConfigureTriggerRequestDelivery;
import com.konfigthis.client.model.WorkflowConfigureTriggerRequestUsersInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for WorkflowConfigureTriggerRequest
 */
public class WorkflowConfigureTriggerRequestTest {
    private final WorkflowConfigureTriggerRequest model = new WorkflowConfigureTriggerRequest();

    /**
     * Model tests for WorkflowConfigureTriggerRequest
     */
    @Test
    public void testWorkflowConfigureTriggerRequest() {
        // TODO: test WorkflowConfigureTriggerRequest
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'notificationCategory'
     */
    @Test
    public void notificationCategoryTest() {
        // TODO: test notificationCategory
    }

    /**
     * Test the property 'users'
     */
    @Test
    public void usersTest() {
        // TODO: test users
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'delivery'
     */
    @Test
    public void deliveryTest() {
        // TODO: test delivery
    }

    /**
     * Test the property 'delay'
     */
    @Test
    public void delayTest() {
        // TODO: test delay
    }

    /**
     * Test the property 'triggerAt'
     */
    @Test
    public void triggerAtTest() {
        // TODO: test triggerAt
    }

    /**
     * Test the property 'brandId'
     */
    @Test
    public void brandIdTest() {
        // TODO: test brandId
    }

    /**
     * Test the property '$idempotencyKey'
     */
    @Test
    public void $idempotencyKeyTest() {
        // TODO: test $idempotencyKey
    }

}
