/*
 * SuprSend API
 * SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TemplateGetContentChannelResponse;
import com.konfigthis.client.model.TemplateGetDetailsResponse;
import com.konfigthis.client.model.TemplateGetListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplateApi
 */
@Disabled
public class TemplateApiTest {

    private static TemplateApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TemplateApi(apiClient);
    }

    /**
     * Fetch Template content for a channel
     *
     * APIs to fetch the content of a particular channel in a template group. It will return data for live and draft version of a template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContentChannelTest() throws ApiException {
        String templateSlug = null;
        String channelSlug = null;
        TemplateGetContentChannelResponse response = api.getContentChannel(templateSlug, channelSlug)
                .execute();
        // TODO: test validations
    }

    /**
     * Fetch Template details
     *
     * APIs to fetch the content of a template group. It will return data for live and draft version of a template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        String templateSlug = null;
        TemplateGetDetailsResponse response = api.getDetails(templateSlug)
                .execute();
        // TODO: test validations
    }

    /**
     * Fetch Template List
     *
     * APIs to fetch the list of all templates in a workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        String hasTagIdsAny = null;
        String hasChannelsAny = null;
        Boolean isActive = null;
        Boolean isArchived = null;
        TemplateGetListResponse response = api.getList()
                .hasTagIdsAny(hasTagIdsAny)
                .hasChannelsAny(hasChannelsAny)
                .isActive(isActive)
                .isArchived(isArchived)
                .execute();
        // TODO: test validations
    }

}
